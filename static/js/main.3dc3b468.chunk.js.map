{"version":3,"sources":["types.js","reducer/noteReducer.js","NoteProvider/NoteProvider.js","hooks/useForm.js","components/NoteForm/NoteForm.js","components/Note/Note.js","components/NoteList/NoteList.js","NoteApp.js","AppWrapper.js","index.js"],"names":["types","noteReducer","state","action","type","payload","filter","note","id","map","NoteContext","createContext","initState","JSON","parse","localStorage","getItem","NoteProvider","children","useReducer","notes","notesDispatch","useState","values","setValues","target","name","value","useForm","note__input","note__select","handleInput","resetForm","useEffect","setItem","stringify","data","Provider","NoteForm","useContext","className","onChange","onClick","newNote","Date","now","content","priority","setTimeout","Note","document","querySelector","focus","updatedNote","NoteList","formVal","NoteApp","AppWrapper","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3dc3b468.chunk.js","sourcesContent":["export const types = {\r\n  ADD: \"ADD\",\r\n  UPDATE: \"UPDATE\",\r\n  DELETE: \"DELETE\",\r\n  DELETE_ALL: \"DELETE ALL\",\r\n};\r\n","import { types } from \"../types\";\r\n\r\nexport const noteReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.ADD:\r\n      return [...state, action.payload];\r\n    case types.DELETE:\r\n      return state.filter((note) => note.id !== action.payload);\r\n    case types.DELETE_ALL:\r\n      return [];\r\n    case types.UPDATE:\r\n      return state.map((note) =>\r\n        note.id === action.payload.id ? action.payload : note\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useEffect, useReducer } from \"react\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport { noteReducer } from \"../reducer/noteReducer\";\r\n\r\nconst NoteContext = createContext();\r\n\r\nconst initState = JSON.parse(localStorage.getItem(\"notes\")) || [];\r\n\r\nconst NoteProvider = ({ children }) => {\r\n  const [notes, notesDispatch] = useReducer(noteReducer, initState);\r\n  const [values, handleInput, resetForm] = useForm({\r\n    note__input: \"\",\r\n    note__select: \"URGENTE\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  const data = { notes, notesDispatch, values, handleInput, resetForm };\r\n\r\n  return <NoteContext.Provider value={data}>{children}</NoteContext.Provider>;\r\n};\r\n\r\nexport { NoteContext };\r\nexport default NoteProvider;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initState) => {\r\n  const [values, setValues] = useState(initState);\r\n\r\n  const handleInput = ({ target }) => {\r\n    setValues({ ...values, [target.name]: target.value });\r\n  };\r\n\r\n  const resetForm = () => setValues(initState);\r\n\r\n  return [values, handleInput, resetForm];\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NoteContext } from \"../../NoteProvider/NoteProvider\";\r\nimport { types } from \"../../types\";\r\nimport \"./NoteForm.scss\";\r\n\r\nconst NoteForm = () => {\r\n  const { notesDispatch, values, handleInput, resetForm } =\r\n    useContext(NoteContext);\r\n  const { note__input, note__select } = values;\r\n  const addNote = () => {\r\n    //If there isnt a new value for the note it returns nothing.\r\n    if (!note__input) return;\r\n    //Prepare the new note.\r\n    const newNote = {\r\n      id: Date.now(),\r\n      content: note__input,\r\n      priority: note__select,\r\n    };\r\n    //Simulates Server Call, dispatch the action and reset the form.,\r\n    setTimeout(() => {\r\n      notesDispatch({\r\n        type: types.ADD,\r\n        payload: newNote,\r\n      });\r\n    }, 1000);\r\n    resetForm();\r\n  };\r\n\r\n  const deleteAll = () => {\r\n    //Simulates Server Call, dispatch the action and reset the form.,\r\n    resetForm();\r\n    setTimeout(() => {\r\n      localStorage.setItem(\"notes\", null);\r\n      notesDispatch({ type: types.DELETE_ALL });\r\n    }, 1000);\r\n  };\r\n  return (\r\n    <div className=\"note-app__form\">\r\n      <input\r\n        value={note__input}\r\n        onChange={handleInput}\r\n        type=\"text\"\r\n        className=\"note__input\"\r\n        name=\"note__input\"\r\n      />\r\n      <select\r\n        onChange={handleInput}\r\n        value={note__select}\r\n        name=\"note__select\"\r\n        className=\"note__select\"\r\n      >\r\n        <option value=\"URGENTE\"> URGENTE</option>\r\n        <option value=\"NORMAL\"> NORMAL</option>\r\n        <option value=\"BAJA\"> BAJA</option>\r\n      </select>\r\n      <button onClick={addNote} className=\"note-app__add\">\r\n        Add\r\n      </button>\r\n      <button className=\"note-app__update\" onClick={deleteAll}>\r\n        Delete All\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteForm;\r\n","import { useContext } from \"react\";\r\nimport { NoteContext } from \"../../NoteProvider/NoteProvider\";\r\nimport { types } from \"../../types\";\r\nimport \"./Note.scss\";\r\n\r\nconst Note = ({ id, content, priority }) => {\r\n  const { notesDispatch, values, handleInput, resetForm } =\r\n    useContext(NoteContext);\r\n  const { note__input, note__select } = values;\r\n  const deleteNote = () => {\r\n    //Simulates Server Call, dispatch the action and reset the form.,\r\n    setTimeout(\r\n      () =>\r\n        notesDispatch({\r\n          type: types.DELETE,\r\n          payload: id,\r\n        }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const updateNote = () => {\r\n    //Set the item content to input value\r\n    handleInput({\r\n      target: {\r\n        name: \"note__input\",\r\n        value: content,\r\n      },\r\n    });\r\n\r\n    //Gets the input and force focus event.\r\n    const input = document.querySelector(\".note__input\");\r\n    input.focus();\r\n\r\n    //If there isnt a new value for the note it returns nothing.\r\n    if (!note__input) return;\r\n\r\n    //The updated note.\r\n    const updatedNote = {\r\n      id,\r\n      content: note__input,\r\n      priority: note__select,\r\n    };\r\n\r\n    //Simulates Server Call, dispatch the action and reset the form.,\r\n    setTimeout(\r\n      () =>\r\n        notesDispatch({\r\n          type: types.UPDATE,\r\n          payload: updatedNote,\r\n        }),\r\n      1000\r\n    );\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      <p className=\"note__text\">{content}</p>\r\n      <span className={`note__priority note__priority--${priority}`}>\r\n        {priority}\r\n      </span>\r\n      <div className=\"note__buttons\">\r\n        <button onClick={deleteNote} className=\"note__delete\">\r\n          Delete\r\n        </button>\r\n        <button onClick={updateNote} className=\"note__update\">\r\n          Update\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import { useContext } from \"react\";\r\nimport { NoteContext } from \"../../NoteProvider/NoteProvider\";\r\nimport Note from \"../Note/Note\";\r\nimport \"./NoteList.scss\";\r\n\r\nconst NoteList = ({ formVal }) => {\r\n  const { notes } = useContext(NoteContext);\r\n  return (\r\n    <ul className=\"notes\">\r\n      {notes?.map((note) => (\r\n        <Note key={note.id} {...note} {...formVal} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import NoteForm from \"./components/NoteForm/NoteForm\";\r\nimport NoteList from \"./components/NoteList/NoteList\";\r\nimport \"./NoteApp.scss\";\r\n\r\nconst NoteApp = () => {\r\n  return (\r\n    <div className=\"note-app\">\r\n      <h1>Note App</h1>\r\n      <NoteForm />\r\n      <NoteList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteApp;\r\n","import NoteApp from \"./NoteApp\";\nimport NoteProvider from \"./NoteProvider/NoteProvider\";\n\nfunction AppWrapper() {\n  return (\n    <NoteProvider>\n      <NoteApp />\n    </NoteProvider>\n  );\n}\n\nexport default AppWrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppWrapper from \"./AppWrapper\";\n\nReactDOM.render(<AppWrapper />, document.getElementById(\"root\"));\n"],"sourceRoot":""}